class Solution {
    public int trap(int[] height) {
      
        if (height == null || height.length == 0) {
            return 0;
        }

        int n = height.length;
        
        int max[] = new int[n];
        int rmax[] = new int[n];
        max[0] = height[0];
        for (int i = 1; i < n; i++) {
            max[i] = Math.max(max[i - 1], height[i]);
        }

        rmax[n - 1] = height[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            rmax[i] = Math.max(rmax[i + 1], height[i]);
        }

        int water = 0;

  
        for (int i = 0; i < n; i++) {
            
            water += Math.min(max[i], rmax[i]) - height[i];
        }
        
        return water;
    }
}
